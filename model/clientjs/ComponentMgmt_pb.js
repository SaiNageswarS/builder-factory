/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.services.ComponentCreateResponse', null, global);
goog.exportSymbol('proto.services.ComponentDetail', null, global);
goog.exportSymbol('proto.services.ComponentDetail.ComponentType', null, global);
goog.exportSymbol('proto.services.ComponentDetail.PipelineState', null, global);
goog.exportSymbol('proto.services.GetComponentRequest', null, global);
goog.exportSymbol('proto.services.GetComponentResponse', null, global);
goog.exportSymbol('proto.services.Package', null, global);
goog.exportSymbol('proto.services.Package.RepoProvider', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.Package = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.Package, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.services.Package.displayName = 'proto.services.Package';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.Package.prototype.toObject = function(opt_includeInstance) {
  return proto.services.Package.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.Package} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.Package.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    repourl: jspb.Message.getFieldWithDefault(msg, 2, ""),
    language: jspb.Message.getFieldWithDefault(msg, 3, ""),
    repoprovider: jspb.Message.getFieldWithDefault(msg, 4, 0),
    repoweburl: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.Package}
 */
proto.services.Package.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.Package;
  return proto.services.Package.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.Package} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.Package}
 */
proto.services.Package.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRepourl(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguage(value);
      break;
    case 4:
      var value = /** @type {!proto.services.Package.RepoProvider} */ (reader.readEnum());
      msg.setRepoprovider(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRepoweburl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.Package.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.Package.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.Package} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.Package.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRepourl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLanguage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRepoprovider();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getRepoweburl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.services.Package.RepoProvider = {
  BITBUCKET: 0,
  GITHUB: 1
};

/**
 * optional string name = 1;
 * @return {string}
 */
proto.services.Package.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.services.Package.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string repoUrl = 2;
 * @return {string}
 */
proto.services.Package.prototype.getRepourl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.services.Package.prototype.setRepourl = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string language = 3;
 * @return {string}
 */
proto.services.Package.prototype.getLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.services.Package.prototype.setLanguage = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional RepoProvider repoProvider = 4;
 * @return {!proto.services.Package.RepoProvider}
 */
proto.services.Package.prototype.getRepoprovider = function() {
  return /** @type {!proto.services.Package.RepoProvider} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.services.Package.RepoProvider} value */
proto.services.Package.prototype.setRepoprovider = function(value) {
  jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional string repoWebUrl = 5;
 * @return {string}
 */
proto.services.Package.prototype.getRepoweburl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.services.Package.prototype.setRepoweburl = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.ComponentDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.ComponentDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.services.ComponentDetail.displayName = 'proto.services.ComponentDetail';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.ComponentDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.services.ComponentDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.ComponentDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ComponentDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    componentname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    applicationname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    componenttype: jspb.Message.getFieldWithDefault(msg, 2, 0),
    orgname: jspb.Message.getFieldWithDefault(msg, 4, ""),
    pb_package: (f = msg.getPackage()) && proto.services.Package.toObject(includeInstance, f),
    pipelinestate: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.ComponentDetail}
 */
proto.services.ComponentDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.ComponentDetail;
  return proto.services.ComponentDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.ComponentDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.ComponentDetail}
 */
proto.services.ComponentDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setComponentname(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setApplicationname(value);
      break;
    case 2:
      var value = /** @type {!proto.services.ComponentDetail.ComponentType} */ (reader.readEnum());
      msg.setComponenttype(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgname(value);
      break;
    case 5:
      var value = new proto.services.Package;
      reader.readMessage(value,proto.services.Package.deserializeBinaryFromReader);
      msg.setPackage(value);
      break;
    case 6:
      var value = /** @type {!proto.services.ComponentDetail.PipelineState} */ (reader.readEnum());
      msg.setPipelinestate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.ComponentDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.ComponentDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.ComponentDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ComponentDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getComponentname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getApplicationname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getComponenttype();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getOrgname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPackage();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.services.Package.serializeBinaryToWriter
    );
  }
  f = message.getPipelinestate();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.services.ComponentDetail.ComponentType = {
  FRONTEND_WEB: 0,
  BACKEND_API_REST: 1,
  BACKEND_API_RPC: 2,
  SCHEDULED_JOB: 3,
  WORKFLOW: 4,
  MAPREDUCE_CLUSTER: 5
};

/**
 * @enum {number}
 */
proto.services.ComponentDetail.PipelineState = {
  DEPLOYED: 0,
  NOT_CONFIGURED: 1,
  BROKEN: 2
};

/**
 * optional string componentName = 3;
 * @return {string}
 */
proto.services.ComponentDetail.prototype.getComponentname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.services.ComponentDetail.prototype.setComponentname = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string applicationName = 1;
 * @return {string}
 */
proto.services.ComponentDetail.prototype.getApplicationname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.services.ComponentDetail.prototype.setApplicationname = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ComponentType componentType = 2;
 * @return {!proto.services.ComponentDetail.ComponentType}
 */
proto.services.ComponentDetail.prototype.getComponenttype = function() {
  return /** @type {!proto.services.ComponentDetail.ComponentType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.services.ComponentDetail.ComponentType} value */
proto.services.ComponentDetail.prototype.setComponenttype = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string orgName = 4;
 * @return {string}
 */
proto.services.ComponentDetail.prototype.getOrgname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.services.ComponentDetail.prototype.setOrgname = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Package package = 5;
 * @return {?proto.services.Package}
 */
proto.services.ComponentDetail.prototype.getPackage = function() {
  return /** @type{?proto.services.Package} */ (
    jspb.Message.getWrapperField(this, proto.services.Package, 5));
};


/** @param {?proto.services.Package|undefined} value */
proto.services.ComponentDetail.prototype.setPackage = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.services.ComponentDetail.prototype.clearPackage = function() {
  this.setPackage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.services.ComponentDetail.prototype.hasPackage = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional PipelineState pipelineState = 6;
 * @return {!proto.services.ComponentDetail.PipelineState}
 */
proto.services.ComponentDetail.prototype.getPipelinestate = function() {
  return /** @type {!proto.services.ComponentDetail.PipelineState} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {!proto.services.ComponentDetail.PipelineState} value */
proto.services.ComponentDetail.prototype.setPipelinestate = function(value) {
  jspb.Message.setProto3EnumField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.ComponentCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.ComponentCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.services.ComponentCreateResponse.displayName = 'proto.services.ComponentCreateResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.ComponentCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.ComponentCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.ComponentCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ComponentCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    componentname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    componentid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.ComponentCreateResponse}
 */
proto.services.ComponentCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.ComponentCreateResponse;
  return proto.services.ComponentCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.ComponentCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.ComponentCreateResponse}
 */
proto.services.ComponentCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setComponentname(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setComponentid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.ComponentCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.ComponentCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.ComponentCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ComponentCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getComponentname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getComponentid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional string componentName = 1;
 * @return {string}
 */
proto.services.ComponentCreateResponse.prototype.getComponentname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.services.ComponentCreateResponse.prototype.setComponentname = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 componentId = 2;
 * @return {number}
 */
proto.services.ComponentCreateResponse.prototype.getComponentid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.services.ComponentCreateResponse.prototype.setComponentid = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.GetComponentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.GetComponentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.services.GetComponentRequest.displayName = 'proto.services.GetComponentRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.GetComponentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.GetComponentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.GetComponentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.GetComponentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    orgname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    appname: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.GetComponentRequest}
 */
proto.services.GetComponentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.GetComponentRequest;
  return proto.services.GetComponentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.GetComponentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.GetComponentRequest}
 */
proto.services.GetComponentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.GetComponentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.GetComponentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.GetComponentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.GetComponentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrgname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAppname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string orgName = 1;
 * @return {string}
 */
proto.services.GetComponentRequest.prototype.getOrgname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.services.GetComponentRequest.prototype.setOrgname = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string appName = 2;
 * @return {string}
 */
proto.services.GetComponentRequest.prototype.getAppname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.services.GetComponentRequest.prototype.setAppname = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.GetComponentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.GetComponentResponse.repeatedFields_, null);
};
goog.inherits(proto.services.GetComponentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.services.GetComponentResponse.displayName = 'proto.services.GetComponentResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.GetComponentResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.GetComponentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.GetComponentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.GetComponentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.GetComponentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    componentsList: jspb.Message.toObjectList(msg.getComponentsList(),
    proto.services.ComponentDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.GetComponentResponse}
 */
proto.services.GetComponentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.GetComponentResponse;
  return proto.services.GetComponentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.GetComponentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.GetComponentResponse}
 */
proto.services.GetComponentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.ComponentDetail;
      reader.readMessage(value,proto.services.ComponentDetail.deserializeBinaryFromReader);
      msg.addComponents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.GetComponentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.GetComponentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.GetComponentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.GetComponentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getComponentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.services.ComponentDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ComponentDetail components = 1;
 * @return {!Array<!proto.services.ComponentDetail>}
 */
proto.services.GetComponentResponse.prototype.getComponentsList = function() {
  return /** @type{!Array<!proto.services.ComponentDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.ComponentDetail, 1));
};


/** @param {!Array<!proto.services.ComponentDetail>} value */
proto.services.GetComponentResponse.prototype.setComponentsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.services.ComponentDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.ComponentDetail}
 */
proto.services.GetComponentResponse.prototype.addComponents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.services.ComponentDetail, opt_index);
};


proto.services.GetComponentResponse.prototype.clearComponentsList = function() {
  this.setComponentsList([]);
};


goog.object.extend(exports, proto.services);
